{"ast":null,"code":"var parse = require('../_parsers/parse'); // const parseSentence = require('../../04-sentence').oneSentence;\n//simply num/denom * 100\n\n\nvar _percentage = function percentage(obj) {\n  if (!obj.numerator && !obj.denominator) {\n    return null;\n  }\n\n  var perc = Number(obj.numerator) / Number(obj.denominator);\n  perc *= 100;\n  var dec = Number(obj.decimals);\n\n  if (isNaN(dec)) {\n    dec = 1;\n  }\n\n  perc = perc.toFixed(dec);\n  return Number(perc);\n};\n\nvar templates = {\n  // https://en.wikipedia.org/wiki/Template:Math\n  'math': function math(tmpl, r) {\n    var obj = parse(tmpl, ['formula']);\n    r.templates.push(obj);\n    return '\\n\\n' + (obj.formula || '') + '\\n\\n';\n  },\n  //fraction - https://en.wikipedia.org/wiki/Template:Sfrac\n  'frac': function frac(tmpl, r) {\n    var order = ['a', 'b', 'c'];\n    var obj = parse(tmpl, order);\n    var data = {\n      template: 'sfrac'\n    };\n\n    if (obj.c) {\n      data.integer = obj.a;\n      data.numerator = obj.b;\n      data.denominator = obj.c;\n    } else if (obj.b) {\n      data.numerator = obj.a;\n      data.denominator = obj.b;\n    } else {\n      data.numerator = 1;\n      data.denominator = obj.a;\n    }\n\n    r.templates.push(data);\n\n    if (data.integer) {\n      return \"\".concat(data.integer, \" \").concat(data.numerator, \"\\u2044\").concat(data.denominator);\n    }\n\n    return \"\".concat(data.numerator, \"\\u2044\").concat(data.denominator);\n  },\n  //https://en.wikipedia.org/wiki/Template:Radic\n  'radic': function radic(tmpl) {\n    var order = ['after', 'before'];\n    var obj = parse(tmpl, order);\n    return \"\".concat(obj.before || '', \"\\u221A\").concat(obj.after || '');\n  },\n  //{{percentage | numerator | denominator | decimals to round to (zero or greater) }}\n  percentage: function percentage() {\n    var tmpl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var obj = parse(tmpl, ['numerator', 'denominator', 'decimals']);\n\n    var num = _percentage(obj);\n\n    if (num === null) {\n      return '';\n    }\n\n    return num + '%';\n  },\n  // {{Percent-done|done=N|total=N|digits=N}}\n  'percent-done': function percentDone() {\n    var tmpl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var obj = parse(tmpl, ['done', 'total', 'digits']);\n\n    var num = _percentage({\n      numerator: obj.done,\n      denominator: obj.total,\n      decimals: obj.digits\n    });\n\n    if (num === null) {\n      return '';\n    }\n\n    return \"\".concat(obj.done, \" (\").concat(num, \"%) done\");\n  },\n  'winning percentage': function winningPercentage() {\n    var tmpl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var r = arguments.length > 1 ? arguments[1] : undefined;\n    var obj = parse(tmpl, ['wins', 'losses', 'ties']);\n    r.templates.push(obj);\n    var wins = Number(obj.wins);\n    var losses = Number(obj.losses);\n    var ties = Number(obj.ties) || 0;\n    var games = wins + losses + ties;\n\n    if (obj.ignore_ties === 'y') {\n      ties = 0;\n    }\n\n    if (ties) {\n      wins += ties / 2;\n    }\n\n    var num = _percentage({\n      numerator: wins,\n      denominator: games,\n      decimals: 1\n    });\n\n    if (num === null) {\n      return '';\n    }\n\n    return \".\".concat(num * 10);\n  },\n  'winlosspct': function winlosspct() {\n    var tmpl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var r = arguments.length > 1 ? arguments[1] : undefined;\n    var obj = parse(tmpl, ['wins', 'losses']);\n    r.templates.push(obj);\n    var wins = Number(obj.wins);\n    var losses = Number(obj.losses);\n\n    var num = _percentage({\n      numerator: wins,\n      denominator: wins + losses,\n      decimals: 1\n    });\n\n    if (num === null) {\n      return '';\n    }\n\n    num = \".\".concat(num * 10);\n    return \"\".concat(wins || 0, \" || \").concat(losses || 0, \" || \").concat(num || '-');\n  }\n}; //aliases\n\ntemplates['sfrac'] = templates.frac;\ntemplates['sqrt'] = templates.radic;\ntemplates['pct'] = templates.percentage;\ntemplates['percent'] = templates.percentage;\ntemplates['winpct'] = templates['winning percentage'];\ntemplates['winperc'] = templates['winning percentage'];\nmodule.exports = templates;","map":null,"metadata":{},"sourceType":"script"}