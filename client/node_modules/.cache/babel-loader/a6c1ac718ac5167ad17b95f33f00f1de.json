{"ast":null,"code":"//okay, i know you're not supposed to regex html, but...\n//https://en.wikipedia.org/wiki/Help:HTML_in_wikitext\n//these are things we throw-away\n//these will mess-up if they're nested, but they're not usually.\nvar ignore = ['table', 'code', 'score', 'data', 'categorytree', 'charinsert', 'hiero', 'imagemap', 'inputbox', 'nowiki', 'poem', 'references', 'source', 'syntaxhighlight', 'timeline'];\nvar openTag = \"< ?(\".concat(ignore.join('|'), \") ?[^>]{0,200}?>\");\nvar closeTag = \"< ?/ ?(\".concat(ignore.join('|'), \") ?>\");\nvar anyChar = '\\\\s\\\\S'; //including newline\n\nvar noThanks = new RegExp(\"\".concat(openTag, \"[\").concat(anyChar, \"]+?\").concat(closeTag), 'ig');\n\nvar kill_xml = function kill_xml(wiki) {\n  //(<ref> tags are parsed in Section class) - luckily, refs can't be recursive.\n  //types of html/xml that we want to trash completely.\n  wiki = wiki.replace(noThanks, ' '); //some xml-like fragments we can also kill\n\n  wiki = wiki.replace(/ ?< ?(span|div|table|data) [a-zA-Z0-9=%\\.#:;'\" ]{2,100}\\/? ?> ?/g, ' '); //<ref name=\"asd\">\n  //only kill ref tags if they are selfclosing\n\n  wiki = wiki.replace(/ ?< ?(ref) [a-zA-Z0-9=\" ]{2,100}\\/ ?> ?/g, ' '); //<ref name=\"asd\"/>\n  //some formatting xml, we'll keep their insides though\n\n  wiki = wiki.replace(/ ?<[ \\/]?(p|sub|sup|span|nowiki|div|table|br|tr|td|th|pre|pre2|hr)[ \\/]?> ?/g, ' '); //<sub>, </sub>\n\n  wiki = wiki.replace(/ ?<[ \\/]?(abbr|bdi|bdo|blockquote|cite|del|dfn|em|i|ins|kbd|mark|q|s)[ \\/]?> ?/g, ' '); //<abbr>, </abbr>\n\n  wiki = wiki.replace(/ ?<[ \\/]?h[0-9][ \\/]?> ?/g, ' '); //<h2>, </h2>\n\n  wiki = wiki.replace(/ ?< ?br ?\\/> ?/g, '\\n'); //<br />\n\n  return wiki.trim();\n};\n\nmodule.exports = kill_xml;","map":null,"metadata":{},"sourceType":"script"}