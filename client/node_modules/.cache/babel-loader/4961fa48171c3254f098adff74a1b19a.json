{"ast":null,"code":"var toMarkdown = require('./toMarkdown');\n\nvar toHtml = require('./toHtml');\n\nvar toLatex = require('./toLatex');\n\nvar toJson = require('./toJson');\n\nvar Image = require('../image/Image');\n\nvar aliasList = require('../_lib/aliases'); //a formal key-value data table about a topic\n\n\nvar Infobox = function Infobox(obj) {\n  this._type = obj.type;\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: obj.data\n  });\n};\n\nvar methods = {\n  type: function type() {\n    return this._type;\n  },\n  links: function links(n) {\n    var _this = this;\n\n    var arr = [];\n    Object.keys(this.data).forEach(function (k) {\n      _this.data[k].links().forEach(function (l) {\n        return arr.push(l);\n      });\n    });\n\n    if (typeof n === 'number') {\n      return arr[n];\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n      var link = arr.find(function (o) {\n        return o.page === n;\n      });\n      return link === undefined ? [] : [link];\n    }\n\n    return arr;\n  },\n  image: function image() {\n    var s = this.get('image');\n\n    if (!s) {\n      return null;\n    }\n\n    var obj = s.json();\n    obj.file = obj.text;\n    obj.text = '';\n    return new Image(obj);\n  },\n  get: function get() {\n    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    key = key.toLowerCase();\n    var keys = Object.keys(this.data);\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var tmp = keys[i].toLowerCase().trim();\n\n      if (key === tmp) {\n        return this.data[keys[i]];\n      }\n    }\n\n    return null;\n  },\n  markdown: function markdown(options) {\n    options = options || {};\n    return toMarkdown(this, options);\n  },\n  html: function html(options) {\n    options = options || {};\n    return toHtml(this, options);\n  },\n  latex: function latex(options) {\n    options = options || {};\n    return toLatex(this, options);\n  },\n  text: function text() {\n    return '';\n  },\n  json: function json(options) {\n    options = options || {};\n    return toJson(this, options);\n  },\n  keyValue: function keyValue() {\n    var _this2 = this;\n\n    return Object.keys(this.data).reduce(function (h, k) {\n      if (_this2.data[k]) {\n        h[k] = _this2.data[k].text();\n      }\n\n      return h;\n    }, {});\n  }\n}; //aliases\n\nObject.keys(methods).forEach(function (k) {\n  Infobox.prototype[k] = methods[k];\n}); //add alises, too\n\nObject.keys(aliasList).forEach(function (k) {\n  Infobox.prototype[k] = methods[aliasList[k]];\n});\nInfobox.prototype.data = Infobox.prototype.keyValue;\nInfobox.prototype.template = Infobox.prototype.type;\nInfobox.prototype.images = Infobox.prototype.image;\nmodule.exports = Infobox;","map":null,"metadata":{},"sourceType":"script"}