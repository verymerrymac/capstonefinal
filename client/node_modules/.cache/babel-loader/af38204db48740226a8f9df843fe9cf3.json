{"ast":null,"code":"var parse = require('../_parsers/parse');\n\nvar languages = require('../../_data/languages');\n\nvar getLang = function getLang(name) {\n  //grab the language from the template name - 'ipa-de'\n  var lang = name.match(/ipac?-(.+)/);\n\n  if (lang !== null) {\n    if (languages.hasOwnProperty(lang[1]) === true) {\n      return languages[lang[1]].english_title;\n    }\n\n    return lang[1];\n  }\n\n  return null;\n}; // pronounciation info\n\n\nvar templates = {\n  // https://en.wikipedia.org/wiki/Template:IPA\n  ipa: function ipa(tmpl, r) {\n    var obj = parse(tmpl, ['transcription', 'lang', 'audio']);\n    obj.lang = getLang(obj.template);\n    obj.template = 'ipa';\n    r.templates.push(obj);\n    return '';\n  },\n  //https://en.wikipedia.org/wiki/Template:IPAc-en\n  ipac: function ipac(tmpl, r) {\n    var obj = parse(tmpl);\n    obj.transcription = (obj.list || []).join(',');\n    delete obj.list;\n    obj.lang = getLang(obj.template);\n    obj.template = 'ipac';\n    r.templates.push(obj);\n    return '';\n  }\n}; // - other languages -\n// Polish, {{IPAc-pl}}\t{{IPAc-pl|'|sz|cz|e|ć|i|n}} → [ˈʂt͡ʂɛt͡ɕin]\n// Portuguese, {{IPAc-pt}}\t{{IPAc-pt|p|o|<|r|t|u|'|g|a|l|lang=pt}} and {{IPAc-pt|b|r|a|'|s|i|l|lang=br}} → [puɾtuˈɣaɫ] and [bɾaˈsiw]\n\nObject.keys(languages).forEach(function (lang) {\n  templates['ipa-' + lang] = templates.ipa;\n  templates['ipac-' + lang] = templates.ipac;\n});\nmodule.exports = templates;","map":null,"metadata":{},"sourceType":"script"}