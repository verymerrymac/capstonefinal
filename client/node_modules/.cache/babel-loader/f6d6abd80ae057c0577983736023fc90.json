{"ast":null,"code":"var site_map = require('../_data/site_map');\n\nvar request = require('./_request');\n\nvar getParams = require('./_params');\n\nvar parseDoc = require('../01-document');\n\nvar makeUrl = function makeUrl(lang) {\n  var url = \"https://\".concat(lang, \".wikipedia.org/w/api.php\");\n\n  if (site_map[lang]) {\n    url = site_map[lang] + '/w/api.php';\n  }\n\n  url += \"?format=json&action=query&generator=random&grnnamespace=0&prop=revisions&rvprop=content&grnlimit=1&rvslots=main&origin=*\";\n  return url;\n}; //this data-format from mediawiki api is nutso\n\n\nvar postProcess = function postProcess(data, options) {\n  var pages = Object.keys(data.query.pages);\n  var id = pages[0];\n  var page = data.query.pages[id] || {};\n\n  if (page.hasOwnProperty('missing') || page.hasOwnProperty('invalid')) {\n    return null;\n  } //us the 'generator' result format, for the random() method\n\n\n  var text = page.revisions[0].slots.main['*'];\n  options.title = page.title;\n  options.pageID = page.pageid;\n\n  try {\n    return parseDoc(text, options);\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}; //fetch and parse a random page from the api\n\n\nvar getRandom = function getRandom(a, b, c) {\n  var _getParams = getParams(a, b, c),\n      lang = _getParams.lang,\n      options = _getParams.options,\n      callback = _getParams.callback;\n\n  var url = makeUrl(lang);\n  return new Promise(function (resolve, reject) {\n    var p = request(url, options);\n    p.then(function (res) {\n      return postProcess(res, options);\n    }).then(function (doc) {\n      //support 'err-back' format\n      if (typeof callback === 'function') {\n        callback(null, doc);\n      }\n\n      resolve(doc);\n    }).catch(reject);\n  });\n};\n\nmodule.exports = getRandom;","map":null,"metadata":{},"sourceType":"script"}