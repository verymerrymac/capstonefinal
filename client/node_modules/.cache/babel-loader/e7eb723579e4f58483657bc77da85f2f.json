{"ast":null,"code":"var ignore = require('./_ignore');\n\nvar getName = require('./_parsers/_getName');\n\nvar parse = require('./_parsers/parse');\n\nvar inf = require('./_infobox');\n\nvar templates = Object.assign({}, require('./wikipedia'), require('./identities'), require('./dates'), require('./formatting'), require('./geo'), require('./language'), require('./money'), require('./sports'), require('./science'), require('./math'), require('./politics'), require('./misc')); // console.log(Object.keys(templates).length + ' Templates!');\n//this gets all the {{template}} strings and decides how to parse them\n\nvar parseTemplate = function parseTemplate(tmpl, wiki, data) {\n  var name = getName(tmpl); //we explicitly ignore these templates\n\n  if (ignore.hasOwnProperty(name) === true) {\n    wiki = wiki.replace(tmpl, '');\n    return wiki;\n  } //match any known template forms (~1,000!)\n\n\n  if (templates.hasOwnProperty(name) === true) {\n    var str = templates[name](tmpl, data);\n    wiki = wiki.replace(tmpl, str);\n    return wiki;\n  } // {{infobox settlement...}}\n\n\n  if (inf.isInfobox(name) === true) {\n    var _obj = parse(tmpl, data, 'raw');\n\n    var infobox = inf.format(_obj);\n    data.templates.push(infobox);\n    wiki = wiki.replace(tmpl, '');\n    return wiki;\n  } //cite book, cite arxiv...\n\n\n  if (/^cite [a-z]/.test(name) === true) {\n    var _obj2 = parse(tmpl, data);\n\n    data.templates.push(_obj2);\n    wiki = wiki.replace(tmpl, '');\n    return wiki;\n  } //fallback parser\n\n\n  var obj = parse(tmpl);\n\n  if (obj !== null && Object.keys(obj).length > 0) {\n    data.templates.push(obj);\n  }\n\n  wiki = wiki.replace(tmpl, '');\n  return wiki;\n};\n\nmodule.exports = parseTemplate;","map":null,"metadata":{},"sourceType":"script"}