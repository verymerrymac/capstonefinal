{"ast":null,"code":"var parse = require('../_parsers/parse');\n\nvar zeroPad = function zeroPad(num) {\n  num = String(num);\n\n  if (num.length === 1) {\n    num = '0' + num;\n  }\n\n  return num;\n};\n\nvar parseTeam = function parseTeam(obj, round, team) {\n  if (obj[\"rd\".concat(round, \"-team\").concat(zeroPad(team))]) {\n    team = zeroPad(team);\n  }\n\n  var score = obj[\"rd\".concat(round, \"-score\").concat(team)];\n  var num = Number(score);\n\n  if (isNaN(num) === false) {\n    score = num;\n  }\n\n  return {\n    team: obj[\"rd\".concat(round, \"-team\").concat(team)],\n    score: score,\n    seed: obj[\"rd\".concat(round, \"-seed\").concat(team)]\n  };\n}; //these are weird.\n\n\nvar playoffBracket = function playoffBracket(tmpl) {\n  var rounds = [];\n  var obj = parse(tmpl); //try some rounds\n\n  for (var i = 1; i < 7; i += 1) {\n    var round = [];\n\n    for (var t = 1; t < 16; t += 2) {\n      var key = \"rd\".concat(i, \"-team\");\n\n      if (obj[key + t] || obj[key + zeroPad(t)]) {\n        var one = parseTeam(obj, i, t);\n        var two = parseTeam(obj, i, t + 1);\n        round.push([one, two]);\n      } else {\n        break;\n      }\n    }\n\n    if (round.length > 0) {\n      rounds.push(round);\n    }\n  }\n\n  return {\n    template: 'playoffbracket',\n    rounds: rounds\n  };\n};\n\nvar all = {\n  //playoff brackets\n  '4teambracket': function teambracket(tmpl, r) {\n    var obj = playoffBracket(tmpl);\n    r.templates.push(obj);\n    return '';\n  }\n}; //a bunch of aliases for these ones:\n// https://en.wikipedia.org/wiki/Category:Tournament_bracket_templates\n\nvar brackets = ['2teambracket', '4team2elimbracket', '8teambracket', '16teambracket', '32teambracket', 'cwsbracket', 'nhlbracket', 'nhlbracket-reseed', '4teambracket-nhl', '4teambracket-ncaa', '4teambracket-mma', '4teambracket-mlb', '8teambracket-nhl', '8teambracket-mlb', '8teambracket-ncaa', '8teambracket-afc', '8teambracket-afl', '8teambracket-tennis3', '8teambracket-tennis5', '16teambracket-nhl', '16teambracket-nhl divisional', '16teambracket-nhl-reseed', '16teambracket-nba', '16teambracket-swtc', '16teambracket-afc', '16teambracket-tennis3', '16teambracket-tennis5'];\nbrackets.forEach(function (key) {\n  all[key] = all['4teambracket'];\n});\nmodule.exports = all;","map":null,"metadata":{},"sourceType":"script"}