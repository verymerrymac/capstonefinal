{"ast":null,"code":"var parse = require('../_parsers/parse');\n\nvar flags = require('../../_data/flags');\n\nvar templates = {\n  //https://en.wikipedia.org/wiki/Template:Flag\n  // {{flag|USA}} →  USA\n  flag: function flag(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    var name = obj.flag || '';\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    }) || [];\n    var flag = found[0] || '';\n    return \"\".concat(flag, \" [[\").concat(found[2], \"|\").concat(name, \"]]\");\n  },\n  // {{flagcountry|USA}} →  United States\n  flagcountry: function flagcountry(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    }) || [];\n    var flag = found[0] || '';\n    return \"\".concat(flag, \" [[\").concat(found[2], \"]]\");\n  },\n  // (unlinked flag-country)\n  flagcu: function flagcu(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    }) || [];\n    var flag = found[0] || '';\n    return \"\".concat(flag, \" \").concat(found[2]);\n  },\n  //https://en.wikipedia.org/wiki/Template:Flagicon\n  // {{flagicon|USA}} → United States\n  flagicon: function flagicon(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    });\n\n    if (!found) {\n      return '';\n    }\n\n    return \"[[\".concat(found[2], \"|\").concat(found[0], \"]]\");\n  },\n  //unlinked flagicon\n  flagdeco: function flagdeco(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    }) || [];\n    return found[0] || '';\n  },\n  //same, but a soccer team\n  fb: function fb(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    });\n\n    if (!found) {\n      return '';\n    }\n\n    return \"\".concat(found[0], \" [[\").concat(found[2], \" national football team|\").concat(found[2], \"]]\");\n  },\n  fbicon: function fbicon(tmpl) {\n    var order = ['flag', 'variant'];\n    var obj = parse(tmpl, order);\n    obj.flag = (obj.flag || '').toLowerCase();\n    var found = flags.find(function (a) {\n      return obj.flag === a[1] || obj.flag === a[2];\n    });\n\n    if (!found) {\n      return '';\n    }\n\n    return \" [[\".concat(found[2], \" national football team|\").concat(found[0], \"]]\");\n  }\n}; //support {{can}}\n\nflags.forEach(function (a) {\n  templates[a[1]] = function () {\n    return a[0];\n  };\n}); //cricket\n\ntemplates['cr'] = templates.flagcountry;\ntemplates['cr-rt'] = templates.flagcountry;\ntemplates['cricon'] = templates.flagicon;\nmodule.exports = templates;","map":null,"metadata":{},"sourceType":"script"}