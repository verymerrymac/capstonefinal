{"ast":null,"code":"var setDefaults = require('../../_lib/setDefaults');\n\nvar toLatex = require('./toLatex');\n\nvar toHtml = require('./toHtml');\n\nvar toMarkdown = require('./toMarkdown');\n\nvar toJson = require('./toJson');\n\nvar defaults = {}; //also called 'citations'\n\nvar Reference = function Reference(data) {\n  Object.defineProperty(this, 'data', {\n    enumerable: false,\n    value: data\n  });\n};\n\nvar methods = {\n  title: function title() {\n    var data = this.data;\n    return data.title || data.encyclopedia || data.author || '';\n  },\n  links: function links(n) {\n    var arr = [];\n\n    if (typeof n === 'number') {\n      return arr[n];\n    } //grab a specific link..\n\n\n    if (typeof n === 'number') {\n      return arr[n];\n    } else if (typeof n === 'string') {\n      //grab a link like .links('Fortnight')\n      n = n.charAt(0).toUpperCase() + n.substring(1); //titlecase it\n\n      var link = arr.find(function (o) {\n        return o.page === n;\n      });\n      return link === undefined ? [] : [link];\n    }\n\n    return arr || [];\n  },\n  text: function text() {\n    return ''; //nah, skip these.\n  },\n  markdown: function markdown(options) {\n    options = setDefaults(options, defaults);\n    return toMarkdown(this, options);\n  },\n  html: function html(options) {\n    options = setDefaults(options, defaults);\n    return toHtml(this, options);\n  },\n  latex: function latex(options) {\n    options = setDefaults(options, defaults);\n    return toLatex(this, options);\n  },\n  json: function json(options) {\n    options = setDefaults(options, defaults);\n    return toJson(this, options);\n  }\n};\nObject.keys(methods).forEach(function (k) {\n  Reference.prototype[k] = methods[k];\n});\nmodule.exports = Reference;","map":null,"metadata":{},"sourceType":"script"}