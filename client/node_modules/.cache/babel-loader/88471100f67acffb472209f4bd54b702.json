{"ast":null,"code":"var Infobox = require('../infobox/Infobox');\n\nvar Reference = require('../02-section/reference/Reference');\n\nvar getTemplates = require('./_getTemplates');\n\nvar parseTemplate = require('./parse');\n\nvar isCitation = new RegExp('^(cite |citation)', 'i');\nvar citations = {\n  citation: true,\n  refn: true,\n  harvnb: true\n}; //ensure references and infoboxes at least look valid\n\nvar isObject = function isObject(x) {\n  return typeof x === 'object' && x !== null && x.constructor.toString().indexOf('Array') === -1;\n}; //reduce the scary recursive situations\n\n\nvar parseTemplates = function parseTemplates(wiki, data, options) {\n  var templates = getTemplates(wiki); //first, do the nested (second level) ones\n\n  templates.nested.forEach(function (tmpl) {\n    wiki = parseTemplate(tmpl, wiki, data, options);\n  }); //then, reparse wiki for the top-level ones\n\n  templates = getTemplates(wiki); //okay if we have a 3-level-deep template, do it again (but no further)\n\n  if (templates.nested.length > 0) {\n    templates.nested.forEach(function (tmpl) {\n      wiki = parseTemplate(tmpl, wiki, data, options);\n    });\n    templates = getTemplates(wiki); //this is getting crazy.\n  } //okay, top-level\n\n\n  templates.top.forEach(function (tmpl) {\n    wiki = parseTemplate(tmpl, wiki, data, options);\n  }); //lastly, move citations + infoboxes out of our templates list\n\n  var clean = [];\n  data.templates.forEach(function (o) {\n    //it's possible that we've parsed a reference, that we missed earlier\n    if (citations[o.template] === true || isCitation.test(o.template) === true) {\n      data.references = data.references || [];\n      data.references.push(new Reference(o));\n      return;\n    }\n\n    if (o.template === 'infobox' && o.data && isObject(o.data)) {\n      data.infoboxes = data.infoboxes || [];\n      data.infoboxes.push(new Infobox(o));\n      return;\n    }\n\n    clean.push(o);\n  });\n  data.templates = clean;\n  return wiki;\n};\n\nmodule.exports = parseTemplates;","map":null,"metadata":{},"sourceType":"script"}