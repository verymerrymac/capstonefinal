{"ast":null,"code":"var misc = require('./misc');\n\nvar parsers = require('./parsers');\n\nvar parse = require('../_parsers/parse');\n\nvar timeSince = require('./_timeSince');\n\nvar format = require('./_format');\n\nvar date = parsers.date;\nvar natural_date = parsers.natural_date;\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; //date- templates we support\n\nvar dateTmpl = Object.assign({}, misc, {\n  currentday: function currentday() {\n    var d = new Date();\n    return String(d.getDate());\n  },\n  currentdayname: function currentdayname() {\n    var d = new Date();\n    return days[d.getDay()];\n  },\n  currentmonth: function currentmonth() {\n    var d = new Date();\n    return months[d.getMonth()];\n  },\n  currentyear: function currentyear() {\n    var d = new Date();\n    return String(d.getFullYear());\n  },\n  monthyear: function monthyear() {\n    var d = new Date();\n    return months[d.getMonth()] + ' ' + d.getFullYear();\n  },\n  'monthyear-1': function monthyear1() {\n    var d = new Date();\n    d.setMonth(d.getMonth() - 1);\n    return months[d.getMonth()] + ' ' + d.getFullYear();\n  },\n  'monthyear+1': function monthyear1() {\n    var d = new Date();\n    d.setMonth(d.getMonth() + 1);\n    return months[d.getMonth()] + ' ' + d.getFullYear();\n  },\n  //Explictly-set dates - https://en.wikipedia.org/wiki/Template:Date\n  date: function date(tmpl) {\n    var order = ['date', 'fmt'];\n    return parse(tmpl, order).date;\n  },\n  'time ago': function timeAgo(tmpl) {\n    var order = ['date', 'fmt'];\n    var time = parse(tmpl, order).date;\n    return timeSince(time);\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age\n  'birth date and age': function birthDateAndAge(tmpl, r) {\n    var order = ['year', 'month', 'day'];\n    var obj = parse(tmpl, order); //support 'one property' version\n\n    if (obj.year && /[a-z]/i.test(obj.year)) {\n      return natural_date(tmpl, r);\n    }\n\n    r.templates.push(obj);\n    obj = format.ymd([obj.year, obj.month, obj.day]);\n    return format.toText(obj);\n  },\n  'birth year and age': function birthYearAndAge(tmpl, r) {\n    var order = ['birth_year', 'birth_month'];\n    var obj = parse(tmpl, order); //support 'one property' version\n\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, r);\n    }\n\n    r.templates.push(obj);\n    var age = new Date().getFullYear() - parseInt(obj.birth_year, 10);\n    obj = format.ymd([obj.birth_year, obj.birth_month]);\n    var str = format.toText(obj);\n\n    if (age) {\n      str += \" (age \".concat(age, \")\");\n    }\n\n    return str;\n  },\n  'death year and age': function deathYearAndAge(tmpl, r) {\n    var order = ['death_year', 'birth_year', 'death_month'];\n    var obj = parse(tmpl, order); //support 'one property' version\n\n    if (obj.death_year && /[a-z]/i.test(obj.death_year)) {\n      return natural_date(tmpl, r);\n    }\n\n    r.templates.push(obj);\n    obj = format.ymd([obj.death_year, obj.death_month]);\n    return format.toText(obj);\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_date_and_age2\n  'birth date and age2': function birthDateAndAge2(tmpl, r) {\n    var order = ['at_year', 'at_month', 'at_day', 'birth_year', 'birth_month', 'birth_day'];\n    var obj = parse(tmpl, order);\n    r.templates.push(obj);\n    obj = format.ymd([obj.birth_year, obj.birth_month, obj.birth_day]);\n    return format.toText(obj);\n  },\n  //https://en.wikipedia.org/wiki/Template:Birth_based_on_age_as_of_date\n  'birth based on age as of date': function birthBasedOnAgeAsOfDate(tmpl, r) {\n    var order = ['age', 'year', 'month', 'day'];\n    var obj = parse(tmpl, order);\n    r.templates.push(obj);\n    var age = parseInt(obj.age, 10);\n    var year = parseInt(obj.year, 10);\n    var born = year - age;\n\n    if (born && age) {\n      return \"\".concat(born, \" (age \").concat(obj.age, \")\");\n    }\n\n    return \"(age \".concat(obj.age, \")\");\n  },\n  //https://en.wikipedia.org/wiki/Template:Death_date_and_given_age\n  'death date and given age': function deathDateAndGivenAge(tmpl, r) {\n    var order = ['year', 'month', 'day', 'age'];\n    var obj = parse(tmpl, order);\n    r.templates.push(obj);\n    obj = format.ymd([obj.year, obj.month, obj.day]);\n    var str = format.toText(obj);\n\n    if (obj.age) {\n      str += \" (age \".concat(obj.age, \")\");\n    }\n\n    return str;\n  },\n  //sortable dates -\n  dts: function dts(tmpl) {\n    //remove formatting stuff, ewww\n    tmpl = tmpl.replace(/\\|format=[ymd]+/i, '');\n    tmpl = tmpl.replace(/\\|abbr=(on|off)/i, '');\n    var order = ['year', 'month', 'date', 'bc'];\n    var obj = parse(tmpl, order);\n\n    if (obj.date && obj.month && obj.year) {\n      //render 'june 5 2018'\n      if (/[a-z]/.test(obj.month) === true) {\n        return [obj.month, obj.date, obj.year].join(' ');\n      }\n\n      return [obj.year, obj.month, obj.date].join('-');\n    }\n\n    if (obj.month && obj.year) {\n      return [obj.year, obj.month].join('-');\n    }\n\n    if (obj.year) {\n      if (obj.year < 0) {\n        obj.year = Math.abs(obj.year) + ' BC';\n      }\n\n      return obj.year;\n    }\n\n    return '';\n  },\n  //date/age/time templates\n  'start': date,\n  'end': date,\n  'birth': date,\n  'death': date,\n  'start date': date,\n  'end date': date,\n  'birth date': date,\n  'death date': date,\n  'start date and age': date,\n  'end date and age': date,\n  //this is insane (hyphen ones are different)\n  'start-date': natural_date,\n  'end-date': natural_date,\n  'birth-date': natural_date,\n  'death-date': natural_date,\n  'birth-date and age': natural_date,\n  'birth-date and given age': natural_date,\n  'death-date and age': natural_date,\n  'death-date and given age': natural_date,\n  'birthdeathage': parsers.two_dates,\n  'dob': date,\n  // 'birth date and age2': date,\n  'age': parsers.age,\n  'age nts': parsers.age,\n  'age in years': parsers['diff-y'],\n  'age in years and months': parsers['diff-ym'],\n  'age in years, months and days': parsers['diff-ymd'],\n  'age in years and days': parsers['diff-yd'],\n  'age in days': parsers['diff-d'] // 'age in years, months, weeks and days': true,\n  // 'age as of date': true,\n\n}); //aliases\n\ndateTmpl.localday = dateTmpl.currentday;\ndateTmpl.localdayname = dateTmpl.currentdayname;\ndateTmpl.localmonth = dateTmpl.currentmonth;\ndateTmpl.localyear = dateTmpl.currentyear;\ndateTmpl.currentmonthname = dateTmpl.currentmonth;\ndateTmpl.currentmonthabbrev = dateTmpl.currentmonth;\ndateTmpl['death date and age'] = dateTmpl['birth date and age'];\ndateTmpl.bda = dateTmpl['birth date and age'];\ndateTmpl['birth date based on age at death'] = dateTmpl['birth based on age as of date'];\nmodule.exports = dateTmpl;","map":null,"metadata":{},"sourceType":"script"}