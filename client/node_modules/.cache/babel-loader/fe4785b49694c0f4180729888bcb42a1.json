{"ast":null,"code":"var strip = require('./_parsers/_strip');\n\nvar open = '{';\nvar close = '}'; //grab all first-level recursions of '{{...}}'\n\nvar findFlat = function findFlat(wiki) {\n  var depth = 0;\n  var list = [];\n  var carry = [];\n\n  for (var i = wiki.indexOf(open); i !== -1 && i < wiki.length; depth > 0 ? i++ : i = wiki.indexOf(open, i + 1)) {\n    var c = wiki[i]; //open it\n\n    if (c === open) {\n      depth += 1;\n    } //close it\n\n\n    if (depth > 0) {\n      if (c === close) {\n        depth -= 1;\n\n        if (depth === 0) {\n          carry.push(c);\n          var tmpl = carry.join('');\n          carry = []; //last check\n\n          if (/\\{\\{/.test(tmpl) && /\\}\\}/.test(tmpl)) {\n            list.push(tmpl);\n          }\n\n          continue;\n        }\n      } //require two '{{' to open it\n\n\n      if (depth === 1 && c !== open && c !== close) {\n        depth = 0;\n        carry = [];\n        continue;\n      }\n\n      carry.push(c);\n    }\n  }\n\n  return list;\n}; //get all nested templates\n\n\nvar findNested = function findNested(top) {\n  var deep = [];\n  top.forEach(function (str) {\n    if (/\\{\\{/.test(str.substr(2)) === true) {\n      str = strip(str);\n      findFlat(str).forEach(function (o) {\n        if (o) {\n          deep.push(o);\n        }\n      });\n    }\n  });\n  return deep;\n};\n\nvar getTemplates = function getTemplates(wiki) {\n  var list = findFlat(wiki);\n  return {\n    top: list,\n    nested: findNested(list)\n  };\n};\n\nmodule.exports = getTemplates; // console.log(getTemplates('he is president. {{nowrap|he is {{age|1980}} years}} he lives in {{date}} texas'));","map":null,"metadata":{},"sourceType":"script"}