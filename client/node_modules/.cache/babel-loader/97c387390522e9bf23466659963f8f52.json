{"ast":null,"code":"var languages = require('../_data/languages'); //some colon symbols are valid links, like `America: That place`\n//so we have to whitelist allowable interwiki links\n\n\nvar interwikis = ['wiktionary', 'wikinews', 'wikibooks', 'wikiquote', 'wikisource', 'wikispecies', 'wikiversity', 'wikivoyage', 'wikipedia', 'wikimedia', 'foundation', 'meta', 'metawikipedia', 'w', 'wikt', 'n', 'b', 'q', 's', 'v', 'voy', 'wmf', 'c', 'm', 'mw', 'phab', 'd'];\nvar allowed = interwikis.reduce(function (h, wik) {\n  h[wik] = true;\n  return h;\n}, {}); //add language prefixes too..\n\nObject.keys(languages).forEach(function (k) {\n  return allowed[k] = true;\n}); //this is predictably very complicated.\n// https://meta.wikimedia.org/wiki/Help:Interwiki_linking\n\nvar parseInterwiki = function parseInterwiki(obj) {\n  var str = obj.page || '';\n\n  if (str.indexOf(':') !== -1) {\n    var m = str.match(/^(.*):(.*)/);\n\n    if (m === null) {\n      return obj;\n    }\n\n    var site = m[1] || '';\n    site = site.toLowerCase(); //only allow interwikis to these specific places\n\n    if (allowed.hasOwnProperty(site) === false) {\n      return obj;\n    }\n\n    obj.wiki = site;\n    obj.page = m[2];\n  }\n\n  return obj;\n};\n\nmodule.exports = parseInterwiki;","map":null,"metadata":{},"sourceType":"script"}