{"ast":null,"code":"var site_map = require('../_data/site_map');\n\nvar isUrl = /^https?:\\/\\//;\n\nfunction isArray(arr) {\n  return arr.constructor.toString().indexOf('Array') > -1;\n}\n\nvar makeTitle = function makeTitle() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  //if given a url...\n  if (isUrl.test(title) === true) {\n    title = title.replace(/.*?\\/wiki\\//, '');\n    title = title.replace(/\\?.*/, '');\n  }\n\n  title = encodeURIComponent(title);\n  return title;\n}; //construct a lookup-url for the wikipedia api\n\n\nvar makeUrl = function makeUrl(title, lang, options) {\n  lang = lang || 'en';\n  var url = \"https://\".concat(lang, \".wikipedia.org/w/api.php\");\n\n  if (site_map[lang]) {\n    url = site_map[lang] + '/w/api.php';\n  }\n\n  if (options.wikiUrl) {\n    url = options.wikiUrl;\n  } //we use the 'revisions' api here, instead of the Raw api, for its CORS-rules..\n\n\n  url += '?action=query&prop=revisions&rvprop=content&maxlag=5&rvslots=main&format=json';\n\n  if (!options.wikiUrl) {\n    url += '&origin=*';\n  }\n\n  if (options.follow_redirects !== false) {\n    url += '&redirects=true';\n  }\n\n  var lookup = 'titles';\n  var pages = []; //support one, or many pages\n\n  if (isArray(title) === false) {\n    pages = [title];\n  } else {\n    pages = title;\n  } //assume numbers mean pageid, and strings are titles (like '1984')\n\n\n  if (typeof pages[0] === 'number') {\n    lookup = 'pageids';\n  } else {\n    pages = pages.map(makeTitle);\n  }\n\n  pages = pages.filter(function (p) {\n    return p !== '';\n  });\n  pages = pages.join('|');\n  url += '&' + lookup + '=' + pages;\n  return url;\n};\n\nmodule.exports = makeUrl;","map":null,"metadata":{},"sourceType":"script"}