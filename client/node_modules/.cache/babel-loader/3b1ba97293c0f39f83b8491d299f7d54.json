{"ast":null,"code":"var i18n = require('../_data/i18n');\n\nvar Image = require('./Image');\n\nvar parseTemplate = require('../templates/_parsers/parse');\n\nvar parseSentence = require('../04-sentence').oneSentence; //regexes:\n\n\nvar isFile = new RegExp('(' + i18n.images.concat(i18n.files).join('|') + '):', 'i');\nvar fileNames = \"(\".concat(i18n.images.concat(i18n.files).join('|'), \")\");\nvar file_reg = new RegExp(fileNames + ':(.+?)[\\\\||\\\\]]', 'iu'); //style directives for Wikipedia:Extended_image_syntax\n\nvar imgLayouts = {\n  thumb: true,\n  thumbnail: true,\n  border: true,\n  right: true,\n  left: true,\n  center: true,\n  top: true,\n  bottom: true,\n  none: true,\n  upright: true,\n  baseline: true,\n  middle: true,\n  sub: true,\n  super: true\n}; //images are usually [[image:my_pic.jpg]]\n\nvar oneImage = function oneImage(img) {\n  var m = img.match(file_reg);\n\n  if (m === null || !m[2]) {\n    return null;\n  }\n\n  var file = \"\".concat(m[1], \":\").concat(m[2] || '');\n  file = file.trim(); //titlecase it\n\n  var title = file.charAt(0).toUpperCase() + file.substring(1); //spaces to underscores\n\n  title = title.replace(/ /g, '_');\n\n  if (title) {\n    var obj = {\n      file: file\n    }; //try to grab other metadata, too\n\n    img = img.replace(/^\\[\\[/, '');\n    img = img.replace(/\\]\\]$/, ''); //https://en.wikipedia.org/wiki/Wikipedia:Extended_image_syntax\n    // - [[File:Name|Type|Border|Location|Alignment|Size|link=Link|alt=Alt|lang=Langtag|Caption]]\n\n    var imgData = parseTemplate(img);\n    var arr = imgData.list || []; //parse-out alt text, if explicitly given\n\n    if (imgData.alt) {\n      obj.alt = imgData.alt;\n    } //remove 'thumb' and things\n\n\n    arr = arr.filter(function (str) {\n      return imgLayouts.hasOwnProperty(str) === false;\n    });\n\n    if (arr[arr.length - 1]) {\n      obj.caption = parseSentence(arr[arr.length - 1]);\n    }\n\n    return new Image(obj, img);\n  }\n\n  return null;\n};\n\nvar parseImages = function parseImages(matches, r, wiki) {\n  matches.forEach(function (s) {\n    if (isFile.test(s) === true) {\n      r.images = r.images || [];\n      var img = oneImage(s);\n\n      if (img) {\n        r.images.push(img);\n      }\n\n      wiki = wiki.replace(s, '');\n    }\n  });\n  return wiki;\n};\n\nmodule.exports = parseImages;","map":null,"metadata":{},"sourceType":"script"}