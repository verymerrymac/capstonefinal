{"ast":null,"code":"var List = require('./List');\n\nvar parseSentence = require('../../04-sentence/').oneSentence;\n\nvar list_reg = /^[#\\*:;\\|]+/;\nvar bullet_reg = /^\\*+[^:,\\|]{4}/;\nvar number_reg = /^ ?\\#[^:,\\|]{4}/;\nvar has_word = /[a-z_0-9\\]\\}]/i; // does it start with a bullet point or something?\n\nvar isList = function isList(line) {\n  return list_reg.test(line) || bullet_reg.test(line) || number_reg.test(line);\n}; //make bullets/numbers into human-readable *'s\n\n\nvar cleanList = function cleanList(list) {\n  var number = 1;\n  list = list.filter(function (l) {\n    return l;\n  });\n\n  for (var i = 0; i < list.length; i++) {\n    var line = list[i]; //add # numberings formatting\n\n    if (line.match(number_reg)) {\n      line = line.replace(/^ ?#*/, number + ') ');\n      line = line + '\\n';\n      number += 1;\n    } else if (line.match(list_reg)) {\n      number = 1;\n      line = line.replace(list_reg, '');\n    }\n\n    list[i] = parseSentence(line);\n  }\n\n  return list;\n};\n\nvar grabList = function grabList(lines, i) {\n  var sub = [];\n\n  for (var o = i; o < lines.length; o++) {\n    if (isList(lines[o])) {\n      sub.push(lines[o]);\n    } else {\n      break;\n    }\n  }\n\n  sub = sub.filter(function (a) {\n    return a && has_word.test(a);\n  });\n  sub = cleanList(sub);\n  return sub;\n};\n\nvar parseList = function parseList(wiki, data) {\n  var lines = wiki.split(/\\n/g); // lines = lines.filter(l => has_word.test(l));\n\n  var lists = [];\n  var theRest = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    if (isList(lines[i]) && lines[i + 1] && isList(lines[i + 1])) {\n      var sub = grabList(lines, i);\n\n      if (sub.length > 0) {\n        lists.push(sub);\n        i += sub.length - 1;\n      }\n    } else {\n      theRest.push(lines[i]);\n    }\n  }\n\n  data.lists = lists.map(function (l) {\n    return new List(l);\n  });\n  wiki = theRest.join('\\n');\n  return wiki;\n};\n\nmodule.exports = parseList;","map":null,"metadata":{},"sourceType":"script"}