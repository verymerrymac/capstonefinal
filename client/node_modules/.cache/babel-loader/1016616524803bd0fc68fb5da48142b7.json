{"ast":null,"code":"//random misc for inline wikipedia templates\nvar parse = require('../_parsers/parse');\n\nvar titlecase = function titlecase(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}; //https://en.wikipedia.org/wiki/Template:Yes\n\n\nvar templates = {};\nvar cells = ['rh', 'rh2', 'yes', 'no', 'maybe', 'eliminated', 'lost', 'safe', 'active', 'site active', 'coming soon', 'good', 'won', 'nom', 'sho', 'longlisted', 'tba', 'success', 'operational', 'failure', 'partial', 'regional', 'maybecheck', 'partial success', 'partial failure', 'okay', 'yes-no', 'some', 'nonpartisan', 'pending', 'unofficial', 'unofficial2', 'usually', 'rarely', 'sometimes', 'any', 'varies', 'black', 'non-album single', 'unreleased', 'unknown', 'perhaps', 'depends', 'included', 'dropped', 'terminated', 'beta', 'table-experimental', 'free', 'proprietary', 'nonfree', 'needs', 'nightly', 'release-candidate', 'planned', 'scheduled', 'incorrect', 'no result', 'cmain', 'calso starring', 'crecurring', 'cguest', 'not yet', 'optional'];\ncells.forEach(function (str) {\n  templates[str] = function (tmpl) {\n    var data = parse(tmpl, ['text']);\n    return data.text || titlecase(data.template);\n  };\n}); //these ones have a text result\n\nvar moreCells = [['active fire', 'Active'], ['site active', 'Active'], ['site inactive', 'Inactive'], ['yes2', ''], ['no2', ''], ['ya', '✅'], ['na', '❌'], ['nom', 'Nominated'], ['sho', 'Shortlisted'], ['tba', 'TBA'], ['maybecheck', '✔️'], ['okay', 'Neutral'], ['n/a', 'N/A'], ['sdash', '—'], ['dunno', '?'], ['draw', ''], ['cnone', ''], ['nocontest', '']];\nmoreCells.forEach(function (a) {\n  templates[a[0]] = function (tmpl) {\n    var data = parse(tmpl, ['text']);\n    return data.text || a[1];\n  };\n}); //this one's a little different\n\ntemplates.won = function (tmpl) {\n  var data = parse(tmpl, ['text']);\n  return data.place || data.text || titlecase(data.template);\n};\n\nmodule.exports = templates;","map":null,"metadata":{},"sourceType":"script"}